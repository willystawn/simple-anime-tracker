import { createClient, SupabaseClient } from '@supabase/supabase-js';
import { Anime } from '../types';

// IMPORTANT: These environment variables must be configured for the app to work.
// You can get these from your Supabase project settings.
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;

export const isSupabaseConfigured = !!(supabaseUrl && supabaseAnonKey);

// Manually define the database schema to provide strong types to the Supabase client.
// In a larger project, this would typically be generated by the Supabase CLI.
export interface Database {
  public: {
    Tables: {
      animes: {
        Row: Anime;
        Insert: {
          title: string;
          image_url?: string | null;
          total_episodes?: number;
          watched_episodes?: number[];
        };
        Update: {
          title?: string;
          image_url?: string | null;
          total_episodes?: number;
          watched_episodes?: number[];
        };
      };
    };
    Views: {
      [key: string]: never;
    };
    Functions: {
      [key: string]: never;
    };
  };
}

export const supabase: SupabaseClient<Database> | null = isSupabaseConfigured
    ? createClient<Database>(supabaseUrl!, supabaseAnonKey!)
    : null;

/* 
  SQL Schema for the 'animes' table in Supabase.
  Execute this in your Supabase SQL Editor to set up the database.

-- 1. Create the table
create table public.animes (
  id uuid default gen_random_uuid() primary key,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  title text not null,
  image_url text,
  total_episodes integer not null default 12,
  watched_episodes integer[] default '{}'::integer[] not null
);

-- 2. Enable Row Level Security (RLS)
alter table public.animes enable row level security;

-- 3. Create policies for public access (for this demo app).
-- In a real production app, you would scope these policies to authenticated users, e.g., using `auth.uid() = user_id`.

create policy "Public animes are viewable by everyone."
  on public.animes for select
  using ( true );

create policy "Anyone can insert animes."
  on public.animes for insert
  with check ( true );

create policy "Anyone can update their own animes."
  on public.animes for update
  using ( true );

create policy "Anyone can delete their own animes."
  on public.animes for delete
  using ( true );

*/